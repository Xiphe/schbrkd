{"version":3,"file":"static/webpack/static/development/pages/index.js.7e3b50628714fc62a70f.hot-update.js","sources":["webpack:///./components/frame/background.tsx"],"sourcesContent":["import React from 'react';\nimport styles from './frame.css';\nimport classnames from 'classnames';\n\nlet sizeClasses = ['small', 'medium', 'big'];\nlet colorClasses = [styles.green, styles.orange, styles.teal];\nlet directions = ['normal', 'reverse'];\n\nfunction Ball({\n  color,\n  size,\n  positionX,\n  positionY,\n  opacity,\n  duration,\n  direction,\n}) {\n  let style = {\n    backgroundColor: 'red',\n    top: `${positionY}px`,\n    left: `${positionX}px`,\n    opacity: opacity,\n    animationDuration: `${duration}ms`,\n    animationDirection: directions[direction],\n  };\n  return (\n    <div\n      style={style}\n      className={classnames(\n        styles.ball,\n        sizeClasses[size],\n        colorClasses[color],\n      )}\n    />\n  );\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction getAnimationDuration(max) {\n  let min = 40;\n  let maxAmount = Math.floor(max);\n  return Math.floor(Math.random() * (maxAmount - min)) + min;\n}\n\n// function buildElement() {\n//   element.classList.add('ball', colors[getRandomInt(3)], size[getRandomInt(3)]);\n\n//   element.style.animationDuration = `${}s`;\n//   element.style.animationDirection = directions[getRandomInt(2)];\n\n//   background.appendChild(element);\n// }\n\nclass AnimatedBackground extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: '',\n      height: '',\n    };\n  }\n\n  opacity = getRandomInt(100) / 100;\n\n  componentDidMount() {\n    this.setState({\n      width: getRandomInt(window.innerWidth),\n      height: getRandomInt(window.innerHeight),\n    });\n  }\n\n  consol\n\n  // function getAmount() {\n  //   let amount = window.innerWidth / 8;\n  //   return amount;\n  // }\n  //   for (let i = 0; i < getAmount(); i++) {\n  //     buildElement();\n  //   }\n\n  render() {\n    return (\n      <Ball\n        duration={getAnimationDuration(200)}\n        opacity={this.opacity}\n        positionX={this.state.width}\n        positionY={this.state.height}\n        color={getRandomInt(3)}\n        size={getRandomInt(3)}\n      />\n    );\n  }\n}\n\nexport default AnimatedBackground;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAvCA;AACA;AAyCA;;;;A","sourceRoot":""}